class Autogenerated {
  Summary? summary;
  List<Results>? results;

  Autogenerated({this.summary, this.results});

  factory Autogenerated.fromJson(Map<String, dynamic> json) {
    return Autogenerated(
      summary: json['summary'] != null ? Summary.fromJson(json['summary']) : null,
      results: (json['results'] as List<dynamic>?)
          ?.map((result) => Results.fromJson(result))
          .toList(),
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = {};
    if (summary != null) data['summary'] = summary!.toJson();
    if (results != null) data['results'] = results!.map((result) => result.toJson()).toList();
    return data;
  }
}

class Summary {
  String? queryType;
  int? queryTime;
  int? numResults;
  int? offset;
  int? totalResults;
  int? fuzzyLevel;
  GeoBias? geoBias;

  Summary(
      {this.queryType,
      this.queryTime,
      this.numResults,
      this.offset,
      this.totalResults,
      this.fuzzyLevel,
      this.geoBias});

  factory Summary.fromJson(Map<String, dynamic> json) {
    return Summary(
      queryType: json['queryType'],
      queryTime: json['queryTime'],
      numResults: json['numResults'],
      offset: json['offset'],
      totalResults: json['totalResults'],
      fuzzyLevel: json['fuzzyLevel'],
      geoBias: json['geoBias'] != null ? GeoBias.fromJson(json['geoBias']) : null,
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['queryType'] = this.queryType;
    data['queryTime'] = this.queryTime;
    data['numResults'] = this.numResults;
    data['offset'] = this.offset;
    data['totalResults'] = this.totalResults;
    data['fuzzyLevel'] = this.fuzzyLevel;
    if (this.geoBias != null) {
      data['geoBias'] = this.geoBias!.toJson();
    }
    return data;
  }
}

class GeoBias {
  double? lat;
  double? lon;

  GeoBias({this.lat, this.lon});

  factory GeoBias.fromJson(Map<String, dynamic> json) {
    return GeoBias(
      lat: json['lat'],
      lon: json['lon'],
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['lat'] = this.lat;
    data['lon'] = this.lon;
    return data;
  }
}

class Results {
  String? type;
  String? id;
  double? score;
  double? dist;
  String? info;
  Poi? poi;
  Address? address;
  GeoBias? position;
  Viewport? viewport;
  List<EntryPoints>? entryPoints;
  List<String>? fuelTypes;
  List<String>? vehicleTypes;

  Results(
      {this.type,
      this.id,
      this.score,
      this.dist,
      this.info,
      this.poi,
      this.address,
      this.position,
      this.viewport,
      this.entryPoints,
      this.fuelTypes,
      this.vehicleTypes});

  factory Results.fromJson(Map<String, dynamic> json) {
    return Results(
      type: json['type'],
      id: json['id'],
      score: json['score'],
      dist: json['dist'],
      info: json['info'],
      poi: json['poi'] != null ? Poi.fromJson(json['poi']) : null,
      address: json['address'] != null ? Address.fromJson(json['address']) : null,
      position: json['position'] != null ? GeoBias.fromJson(json['position']) : null,
      viewport: json['viewport'] != null ? Viewport.fromJson(json['viewport']) : null,
      entryPoints: (json['entryPoints'] as List<dynamic>?)
          ?.map((entryPoint) => EntryPoints.fromJson(entryPoint))
          .toList(),
      fuelTypes: (json['fuelTypes'] as List<dynamic>?)?.cast<String>(),
      vehicleTypes: (json['vehicleTypes'] as List<dynamic>?)?.cast<String>(),
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['type'] = this.type;
    data['id'] = this.id;
    data['score'] = this.score;
    data['dist'] = this.dist;
    data['info'] = this.info;
    if (this.poi != null) {
      data['poi'] = this.poi!.toJson();
    }
    if (this.address != null) {
      data['address'] = this.address!.toJson();
    }
    if (this.position != null) {
      data['position'] = this.position!.toJson();
    }
    if (this.viewport != null) {
      data['viewport'] = this.viewport!.toJson();
    }
    if (this.entryPoints != null) {
      data['entryPoints'] = this.entryPoints!.map((v) => v.toJson()).toList();
    }
    data['fuelTypes'] = this.fuelTypes;
    data['vehicleTypes'] = this.vehicleTypes;
    return data;
  }
}

class Poi {
  String? name;
  List<CategorySet>? categorySet;
  List<String>? categories;
  List<Classifications>? classifications;
  String? url;
  List<Brands>? brands;
  String? phone;

  Poi(
      {this.name,
      this.categorySet,
      this.categories,
      this.classifications,
      this.url,
      this.brands,
      this.phone});

  factory Poi.fromJson(Map<String, dynamic> json) {
    return Poi(
      name: json['name'],
      categorySet: (json['categorySet'] as List<dynamic>?)
          ?.map((category) => CategorySet.fromJson(category))
          .toList(),
      categories: (json['categories'] as List<dynamic>?)?.cast<String>(),
      classifications: (json['classifications'] as List<dynamic>?)
          ?.map((classification) => Classifications.fromJson(classification))
          .toList(),
      url: json['url'],
      brands: (json['brands'] as List<dynamic>?)
          ?.map((brand) => Brands.fromJson(brand))
          .toList(),
      phone: json['phone'],
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    if (this.categorySet != null) {
      data['categorySet'] = this.categorySet!.map((v) => v.toJson()).toList();
    }
    data['categories'] = this.categories;
    if (this.classifications != null) {
      data['classifications'] =
          this.classifications!.map((v) => v.toJson()).toList();
    }
    data['url'] = this.url;
    if (this.brands != null) {
      data['brands'] = this.brands!.map((v) => v.toJson()).toList();
    }
    data['phone'] = this.phone;
    return data;
  }
}

class CategorySet {
  int? id;

  CategorySet({this.id});

  factory CategorySet.fromJson(Map<String, dynamic> json) {
    return CategorySet(
      id: json['id'],
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    return data;
  }
}

class Classifications {
  String? code;
  List<Names>? names;

  Classifications({this.code, this.names});

  factory Classifications.fromJson(Map<String, dynamic> json) {
    return Classifications(
      code: json['code'],
      names: (json['names'] as List<dynamic>?)
          ?.map((name) => Names.fromJson(name))
          .toList(),
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    if (this.names != null) {
      data['names'] = this.names!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Names {
  String? nameLocale;
  String? name;

  Names({this.nameLocale, this.name});

  factory Names.fromJson(Map<String, dynamic> json) {
    return Names(
      nameLocale: json['nameLocale'],
      name: json['name'],
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['nameLocale'] = this.nameLocale;
    data['name'] = this.name;
    return data;
  }
}

class Brands {
  String? name;

  Brands({this.name});

  factory Brands.fromJson(Map<String, dynamic> json) {
    return Brands(
      name: json['name'],
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    return data;
  }
}

class Address {
  String? streetNumber;
  String? streetName;
  String? municipality;
  String? countrySubdivision;
  String? countrySubdivisionName;
  String? countrySubdivisionCode;
  String? postalCode;
  String? extendedPostalCode;
  String? countryCode;
  String? country;
  String? countryCodeISO3;
  String? freeformAddress;
  String? localName;
  String? municipalitySubdivision;

  Address(
      {this.streetNumber,
      this.streetName,
      this.municipality,
      this.countrySubdivision,
      this.countrySubdivisionName,
      this.countrySubdivisionCode,
      this.postalCode,
      this.extendedPostalCode,
      this.countryCode,
      this.country,
      this.countryCodeISO3,
      this.freeformAddress,
      this.localName,
      this.municipalitySubdivision});

  Address.fromJson(Map<String, dynamic> json) {
    streetNumber = json['streetNumber'];
    streetName = json['streetName'];
    municipality = json['municipality'];
    countrySubdivision = json['countrySubdivision'];
    countrySubdivisionName = json['countrySubdivisionName'];
    countrySubdivisionCode = json['countrySubdivisionCode'];
    postalCode = json['postalCode'];
    extendedPostalCode = json['extendedPostalCode'];
    countryCode = json['countryCode'];
    country = json['country'];
    countryCodeISO3 = json['countryCodeISO3'];
    freeformAddress = json['freeformAddress'];
    localName = json['localName'];
    municipalitySubdivision = json['municipalitySubdivision'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['streetNumber'] = this.streetNumber;
    data['streetName'] = this.streetName;
    data['municipality'] = this.municipality;
    data['countrySubdivision'] = this.countrySubdivision;
    data['countrySubdivisionName'] = this.countrySubdivisionName;
    data['countrySubdivisionCode'] = this.countrySubdivisionCode;
    data['postalCode'] = this.postalCode;
    data['extendedPostalCode'] = this.extendedPostalCode;
    data['countryCode'] = this.countryCode;
    data['country'] = this.country;
    data['countryCodeISO3'] = this.countryCodeISO3;
    data['freeformAddress'] = this.freeformAddress;
    data['localName'] = this.localName;
    data['municipalitySubdivision'] = this.municipalitySubdivision;
    return data;
  }
}

class Viewport {
  GeoBias? topLeftPoint;
  GeoBias? btmRightPoint;

  Viewport({this.topLeftPoint, this.btmRightPoint});

  factory Viewport.fromJson(Map<String, dynamic> json) {
    return Viewport(
      topLeftPoint: json['topLeftPoint'] != null
          ? GeoBias.fromJson(json['topLeftPoint'])
          : null,
      btmRightPoint: json['btmRightPoint'] != null
          ? GeoBias.fromJson(json['btmRightPoint'])
          : null,
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    if (this.topLeftPoint != null) {
      data['topLeftPoint'] = this.topLeftPoint!.toJson();
    }
    if (this.btmRightPoint != null) {
      data['btmRightPoint'] = this.btmRightPoint!.toJson();
    }
    return data;
  }
}

class EntryPoints {
  String? type;
  GeoBias? position;

  EntryPoints({this.type, this.position});

  factory EntryPoints.fromJson(Map<String, dynamic> json) {
    return EntryPoints(
      type: json['type'],
      position: json['position'] != null
          ? GeoBias.fromJson(json['position'])
          : null,
    );
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['type'] = this.type;
    if (this.position != null) {
      data['position'] = this.position!.toJson();
    }
    return data;
  }
}
